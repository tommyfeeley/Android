apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "com.squareup.sqldelight"

apply plugin: 'jacoco'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.photoapp.photoalbum"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Split resources by features.
    sourceSets {
        main.res.srcDirs += 'src/main/res/launch'
        main.res.srcDirs += 'src/main/res/albumlist'
        main.res.srcDirs += 'src/main/res/photolist'
        main.res.srcDirs += 'src/main/res/photoviewer'
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta2'

    // Legacy.
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Material design.
    implementation 'com.google.android.material:material:1.1.0-alpha08'

    // Moshi..
    implementation ("com.squareup.moshi:moshi-kotlin:1.8.0") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"

    // Retrofit.
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // OkHttp.
    implementation 'com.squareup.okhttp3:okhttp:3.12.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.2'

    // Picasso.
    implementation ("com.squareup.picasso:picasso:2.71828"){
        exclude group: "com.android.support"
    }

    // Kotlin Coroutines.
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"

    // RecyclerView.
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0"


    // Database
    implementation "com.squareup.sqldelight:android-driver:1.2.0"

    // PhotoView.
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // Multidex.
    implementation 'com.android.support:multidex:2.0.1'

    implementation project(':vinci')

    // Test libraries.

    // Core.
    testImplementation 'androidx.test:core:1.2.0'

    // JUnit.
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'androidx.test:rules:1.2.0'

    // Kotlin.
    testImplementation ('org.jetbrains.kotlin:kotlin-test')
    testImplementation ('org.jetbrains.kotlin:kotlin-test-junit')

    // SQLDelight.
    testImplementation "com.squareup.sqldelight:sqlite-driver:1.2.0"

    // Ui automator.
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Assertion.
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Espresso.
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'

    // Mockk.
    testImplementation ("io.mockk:mockk:1.9.3")
    androidTestImplementation ("io.mockk:mockk-android:1.9.3") {
        exclude module: 'objenesis'
    }
    androidTestImplementation 'org.objenesis:objenesis:2.6'

    // Mockito.
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.24.5'
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'

    // Arbitrater.
    testImplementation ("com.tyro.oss:arbitrater:0.0.6")
    androidTestImplementation ("com.tyro.oss:arbitrater:0.0.6")
}

androidExtensions {
    experimental = true
}

sqldelight {
    PhotoDB {
        packageName = "com.photoapp.photoalbum.database.photo"
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
